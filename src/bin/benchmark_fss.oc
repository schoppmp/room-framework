#include "oram_fssl/fss_cprg.oh"
#include "oram_fssl/floram.h"
#include "benchmark_fss.h"

void benchmark_fss(void *vargs) {
  struct BenchmarkFSSArgs *args = vargs;

  uint8_t *y = calloc(args->len, BLOCKSIZE);
  bool *bits = calloc(args->len,  sizeof(bool));
  obliv uint8_t *active_block_delta = calloc(1, BLOCKSIZE * sizeof(obliv uint8_t));
  size_t index = (args->len / 3); // arbitrary

  // create fss object
  fss_cprg *fss = fss_cprg_new(args->len, 1);

  // get blockvector
  fss_cprg_getblockvector(active_block_delta, y, bits, fss, index);

  // check if result looks correct
  bool at_index, not_at_index;
  revealOblivBool(&at_index, feedOblivBool(bits[index], 1) ^ feedOblivBool(bits[index], 2), 0);
  revealOblivBool(&not_at_index, feedOblivBool(bits[index+1], 1) ^ feedOblivBool(bits[index+1], 2), 0);
  printf("at_index = %d, not_at_index = %d\n", at_index, not_at_index);

  free(y);
  free(bits);
  free(active_block_delta);
}
