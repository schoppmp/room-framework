#include "pir_protocol_fss.h"
#include <obliv.oh>
#include <copy.oh>
#include <oram_fssl/floram.oh>
#include <bcrandom.h>

void pir_fss_oblivc(void *vargs) {
  pir_fss_oblivc_args *args = vargs;
  args->num_server_values = ocBroadcastLLong(args->num_server_values, 1);

  if(ocCurrentParty() == 2) {
    // allocate zero array for client's shares for faster floram construction
    args->server_values = calloc(args->num_server_values,
      (args->value_type_size + 1));
  }
  obliv size_t *client_keys = calloc(args->num_client_keys,
    sizeof(obliv size_t));
  obliv uint8_t *client_values1 = calloc(
    args->num_client_keys * args->value_type_size, sizeof(obliv uint8_t));
  obliv uint8_t *client_values2 = calloc(
    args->num_client_keys * args->value_type_size, sizeof(obliv uint8_t));
  feedOblivCharArray(client_values1, args->server_defaults,
    args->num_client_keys * args->value_type_size, 1);
  feedOblivLLongArray(client_keys, args->client_keys, args->num_client_keys, 2);

  // select client's values
  OcCopy cpy = ocCopyCharN(args->value_type_size + 1); // one extra byte for valid flag
  OcCopy cpy2 = ocCopyCharN(args->value_type_size);
  // CPRG floram crashes when the ORAM is too small
  size_t floram_size = args->num_server_values < 8 ? 8 : args->num_server_values;
  floram *ram = floram_new(&cpy, args->server_values, floram_size, 1, 1);
  obliv uint8_t *current_value = calloc(args->value_type_size + 1, sizeof(obliv uint8_t));
  for(size_t i = 0; i < args->num_client_keys; i++) {
    obliv if(client_keys[i] < args->num_server_values) {
      floram_read(current_value, ram, client_keys[i]);
    }
    obliv uint8_t *current_value_client = &client_values2[i * args->value_type_size];
    obliv uint8_t *current_value_server = &client_values1[i * args->value_type_size];
    obliv if(current_value[args->value_type_size]&1 == 1) {
      ocCopy(&cpy2, current_value_client, current_value);
    } else {
      ocCopy(&cpy2, current_value_client, current_value_server);
    }
    current_value[args->value_type_size] = 0;
  }

  // reveal result to client
  revealOblivCharArray(args->result, client_values2,
    args->value_type_size * args->num_client_keys, 2);

  free(client_keys);
  free(client_values1);
  free(client_values2);
  free(current_value);
  if(ocCurrentParty() == 2) {
    free(args->server_values);
  }
  floram_free(ram);
}
